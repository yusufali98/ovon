# @package _global_

defaults:
  - /habitat_baselines: habitat_baselines_rl_config_base
  - /habitat_baselines/rl/policy/obs_transforms:
    - resize
  - model: vc1_vitb
  - objectnav_stretch_hm3d_rgbds
  - _self_

habitat:
  environment:
    iterator_options:
      max_scene_repeat_steps: 50000
  task:
    success_reward: 2.5
    slack_reward: -1e-3

    measurements:
      distance_to_goal: 
        type: OVONDistanceToGoal
      success:
        success_distance: 0.25
  
  simulator:
    type: "OVONSim-v0"
    navmesh_settings:
      agent_max_climb: 0.1
      cell_height: 0.05
    scene_dataset: "/srv/kira-lab/share4/yali30/habitat_datasets/hm3d_train_semantics/data/versioned_data/hm3d-0.2/hm3d/hm3d_annotated_basis.scene_dataset_config.json"
  
  dataset:
    type: "OVON-v1"
    data_path: "/srv/kira-lab/share4/yali30/cow_ovon/hm3d_data/datasets/ovon_naoki/ovon/hm3d/v2/train/train.json.gz"
    scenes_dir: "/srv/kira-lab/share4/yali30/habitat_datasets/hm3d_train_semantics/data/versioned_data/hm3d-0.2"


habitat_baselines:
  torch_gpu_id: 0
  tensorboard_dir: "runs/ovon/ver/cortex_test/tb/"
  video_dir: "video_dir"
  test_episode_count: -1
  eval_ckpt_path_dir: "data/new_checkpoints"
  num_environments: 32
  checkpoint_folder: "runs/ovon/ver/cortex_test/data/new_checkpoints/"
  trainer_name: "ver"
  num_updates: 270000
  log_interval: 1
  log_file: 'runs/ovon/ver/cortex_test/train.log'
  num_checkpoints: 400
  # Force PyTorch to be single threaded as
  # this improves performance considerably
  force_torch_single_threaded: True

  eval:
    split: "val"

  rl:

    policy:
      name: "CortexPolicy"

    ppo:
      # ppo params
      clip_param: 0.2
      ppo_epoch: 4
      num_mini_batch: 2
      value_loss_coef: 0.5
      entropy_coef: 0.01
      lr: 2.5e-4
      eps: 1e-5
      max_grad_norm: 0.2
      num_steps: 64
      use_gae: True
      gamma: 0.99
      tau: 0.95
      use_linear_clip_decay: False
      use_linear_lr_decay: False
      reward_window_size: 50

      use_normalized_advantage: False

      hidden_size: 512

    ddppo:
      sync_frac: 0.6
      # The PyTorch distributed backend to use
      distrib_backend: NCCL
      # Visual encoder backbone
      pretrained_weights: data/ddppo-models/gibson-2plus-resnet50.pth
      # Initialize with pretrained weights
      pretrained: False
      # Initialize just the visual encoder backbone with pretrained weights
      pretrained_encoder: False
      # Whether or not the visual encoder backbone will be trained.
      train_encoder: False
      # Whether or not to reset the critic linear layer
      reset_critic: True

      # Model parameters
      rnn_type: LSTM
      num_recurrent_layers: 2
